#!/bin/sh
#
# Brief: Mounts an USB HDD or stick in /media/hddN and enables the swap. It's 
#		called from usr/sbin/usb_detect. At mount time, treat it first as if it
#		was a swap partition, then we try vfat because if we don't specify this
#		type and the unit is indeed vfat, the system mounts it wrongly as msdos.
#		If we fail to mount it as vfat, we let the system to autodetect 
#		the fs type and mount it. This will work right with ext2/3.
#
# Copyright (c) 2009-2010 Duolabs Spa
#
# Author: Pedro Aguilar (pedro@duolabs.com)
#
# Changelog
# Date    Author      Comments
# ------------------------------------------------------------------------------
# 100823  paguilar    v1.0 Original
# 100824  paguilar    v1.1 Fix a bug that wrongly parsed the tmp file that 
#					  contains the currently mounted idevs.
#					  Do not send empty params to the hotplug_manager
# 

# Exit if we were called with no args
if [ "$1" == "" -o "$2" == "" -o "$3" == "" -o "$4" == "" ]; then
    exit
fi

BOARD=$1
ACTION=$2
devname=$3
devnum=$4

# From e2 we decide if we want to enable/disable the swap partition
SWAPON=$(cat /etc/enigma2/settings | awk -F = '/config.usage.hdd_swap/ { print $2 }')

# Mount the device as swap or /media/hddN, N can be null or > 1
if [ "$ACTION" == "add" ]; then

	num=""
	prevnum=0

	# If /dev/sdX has at least one partition, skip /dev/sdX
	partition=/dev/$devname"1"
	if [ "$devnum" -eq "" -a -e "$partition" ]; then
		exit
	fi

	# This "locking" mechanism is needed for being sure that each partition 
	# is mounted in a different /media/hddN. Otherwise the calls to this script
	# overlap and we mount all the partitions in the same /media/hddN
	# WARNING: This stops udev from keep serving new devices
	while [[ "$(cat /tmp/.hdd_locked)" -gt "0" ]]; do
		sleep 1
	done

	echo 1 > /tmp/.hdd_locked

	mounted=$(mount | awk -F' ' '/\/media\/hdd/ { print $3 }')
	for i in $mounted; do
		num=$(echo $i | sed 's/\(\/media\/hdd\)\([0-9]*\)/\2/')
		if [ "$num" == ""  ]; then
			num=0
			prevnum=$num
		else
			if [ "$num" -gt "$prevnum" ]; then
				prevnum=$num
			fi
		fi
	done

	if [ "$num" != "" -a "$num" -ge 0 ]; then
		num=$(( num + 1 ))
	fi

	mkdir -p /media/hdd$num

	# Treat it first as if it was a swap partition
	if [ "$SWAPON" == "true" ]; then
		swapon /dev/$devname
		if [ "$?" -eq "0" ]; then
			# The swap on was successful, exit silently
			echo 0 > /tmp/.hdd_locked
			exit
		fi
	fi

	# Try to mount it as vfat
	mount -t vfat -o usefree /dev/$devname /media/hdd$num 2> /dev/null
	if [ "$?" -ne "0" ]; then
		# Try to mount it as HFS+
		mount -t hfsplus -o ro /dev/$devname /media/hdd$num 2> /dev/null
		if [ "$?" -ne "0" ]; then
			# Try the default ext2/ext3
			mount /dev/$devname /media/hdd$num 2> /dev/null
			if [ "$?" -ne "0" ]; then
				# We didn't recognize the partition, unlock and exit cowardly
				echo 0 > /tmp/.hdd_locked
				exit
			fi
		fi
	fi

	# If we mounted it as ext2/3, tune it so we can handle errors
	fstype=$(mount | awk -F' ' '/^\/dev\/$devname/ { print $5 }')
	if [ "$fstype" == "ext2" -o "$fstype" == "ext3" ]; then
		tune2fs -c 0 -i 0 -e continue /dev/$devname
	fi

	# Calls the HDD hotplug manager used by e2
	/sbin/hotplug_manager -a "$ACTION" -d "/dev/$devname" -t "storage"

	echo 0 > /tmp/.hdd_locked

# Unmount the device
elif [ "$ACTION" == "remove" ]; then
	# Treat it first as if it was a swap partition
	if [ "$SWAPON" == "true" ]; then
		swapoff /dev/$devname
		if [ "$?" -eq "0" ]; then
			exit
		fi
	fi

	umount /dev/$devname
	if [ "$?" -ne "0" ]; then
		echo 0 > /tmp/.hdd_locked
		exit
	fi

	# Calls the HDD hotplug manager used by e2
	#echo "/sbin/hotplug_manager -a '$ACTION' -d '/dev/$devname' -t 'storage'" >> /home/chido
	/sbin/hotplug_manager -a "$ACTION" -d "/dev/$devname" -t "storage"
fi

